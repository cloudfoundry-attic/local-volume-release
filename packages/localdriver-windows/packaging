. ./exiter.ps1

$ErrorActionPreference = "Stop";
trap { $host.SetShouldExit(1) }

$BOSH_INSTALL_TARGET = Resolve-Path "${env:BOSH_INSTALL_TARGET}"
if ((Get-Item $BOSH_INSTALL_TARGET).LinkType -ne "") {
  $BOSH_INSTALL_TARGET = (Get-Item $BOSH_INSTALL_TARGET).Target
}

$env:GOROOT="C:\var\vcap\packages\golang-1-windows\go"
$env:GOPATH="${BOSH_INSTALL_TARGET}"
$env:PATH="${env:GOROOT}\bin;${env:PATH}"

$ld_pkg_path="code.cloudfoundry.org/localdriver/cmd/localdriver"

# Create GOPATH
New-Item -ItemType "directory" -Force "${BOSH_INSTALL_TARGET}\src"

robocopy.exe /E "${PWD}" "${BOSH_INSTALL_TARGET}\src" > robocopy.out
if ($LASTEXITCODE -ge 8) {
    Write-Error "robocopy.exe /E ${PWD} ${BOSH_INSTALL_TARGET}\src"
}

go.exe build -o "${BOSH_INSTALL_TARGET}\localdriver.exe" "${ld_pkg_path}"
if ($LASTEXITCODE -ne 0) {
    Write-Error "Error compiling: ${ld_pkg_path}"
}

# Cleanup build artifacts
New-Item -ItemType directory -Path ".\emptydirectory" -Force

robocopy.exe ".\emptydirectory" "${BOSH_INSTALL_TARGET}\src" /PURGE
if ($LASTEXITCODE -ge 8) {
    Write-Error "robocopy.exe .\emptydirectory ${BOSH_INSTALL_TARGET}\src /PURGE"
}

Remove-Item -Recurse -Path "${BOSH_INSTALL_TARGET}\src" -Force
Remove-Item -Recurse -Path ".\emptydirectory" -Force

Exit 0
